# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R", rating == "PG", rating == "G", rating == "NC17", rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R") %>% #, rating == "PG", rating == "G", rating == "NC17", rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R", rating == "PG") %>% #, rating == "PG", rating == "G", rating == "NC17", rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" || rating == "PG") %>% #, rating == "PG", rating == "G", rating == "NC17", rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" & rating == "PG") %>% #, rating == "PG", rating == "G", rating == "NC17", rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" && rating == "PG") %>% #, rating == "PG", rating == "G", rating == "NC17", rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" | rating == "PG") %>% #, rating == "PG", rating == "G", rating == "NC17", rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC17" | rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
data = arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13")
ggplot(movies, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating)
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13")
ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating)
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13")
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating)
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings")
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) geom_smooth(method="lm", size=4, color="red") # Graphing revenue vs. budget for different ratings
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=4, color="red") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="red") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
ggplot(movies1, aes(x=budget, y=gross))+
geom_point(aes(size=carat, shape=cut, alpha=rating),color="blue")
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
ggplot(movies1, aes(x=budget, y=gross))+
geom_point(aes(shape=rating))
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13", budget < 1e8) # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
ggplot(movies1, aes(x=budget, y=gross))+
geom_point(aes(shape=rating))
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
ggplot(movies1, aes(x=budget, y=gross))+
geom_point(aes(shape=rating))
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
ggplot(movies1, aes(x=budget, y=gross))+
geom_point(aes(shape=rating)) + geom_smooth(method="lm", size=1, color="blue")
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13", year >= 2000) %>%
# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13", year >= 2000) %>%
# Filtering out movies that weren't rated under the MPAA system and released before 21st century
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13", year >= 2000) # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13", year >= 2000, country == "USA") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13", year >= 2000) # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
count(movies1$rating == "G")
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
sum(movies1$rating == "G")
sum(movies1$rating == "PG-13")
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system and released before 21st century
group_by(genre) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system and released before 21st century
group_by(genre) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), rating) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system and released before 21st century
group_by(genre) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system and released before 21st century
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system and released before 21st century
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system and released before 21st century
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(score_avg) # Arranging in ascending order of the revenue
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system and released before 21st century
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies$AgeCategory<-factor(NA,levels=c("child","adult","senior citizen"))
acs$AgeCategory[acs$Age2<=18]<-"child"
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies$scoreNew <-factor(NA,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies$score[movies$scoreNew >= 0 | movies$scoreNew < 2]<-"0-2"
movies$score[movies$scoreNew >= 2 | movies$scoreNew < 4]<-"2-4"
movies$score[movies$scoreNew >= 4 | movies$scoreNew < 6]<-"4-6"
movies$score[movies$scoreNew >= 6 | movies$scoreNew < 8]<-"6-8"
movies$score[movies$scoreNew >= 8 | movies$scoreNew < 10]<-"8-10"
table(movies$scoreNew, movies$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies$scoreNew <-factor(NA,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies$scoreNew[movies$score >= 0 | movies$score < 2]<-"0-2"
movies$score[movies$scoreNew >= 2 | movies$scoreNew < 4]<-"2-4"
movies$score[movies$scoreNew >= 4 | movies$scoreNew < 6]<-"4-6"
movies$score[movies$scoreNew >= 6 | movies$scoreNew < 8]<-"6-8"
movies$score[movies$scoreNew >= 8 | movies$scoreNew < 10]<-"8-10"
table(movies$scoreNew, movies$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies$scoreNew <-factor(NA,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies$scoreNew[movies$score >= 0 | movies$score < 2]<-"0-2"
movies$scoreNew[movies$score >= 2 | movies$score < 4]<-"2-4"
movies$scoreNew[movies$score >= 4 | movies$score < 6]<-"4-6"
movies$scoreNew[movies$score >= 6 | movies$score < 8]<-"6-8"
movies$scoreNew[movies$score >= 8 | movies$score < 10]<-"8-10"
table(movies$scoreNew, movies$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies$scoreNew <-factor(NA,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies$scoreNew[movies$score >= 0 & movies$score < 2]<-"0-2"
movies$scoreNew[movies$score >= 2 & movies$score < 4]<-"2-4"
movies$scoreNew[movies$score >= 4 & movies$score < 6]<-"4-6"
movies$scoreNew[movies$score >= 6 & movies$score < 8]<-"6-8"
movies$scoreNew[movies$score >= 8 & movies$score < 10]<-"8-10"
table(movies$scoreNew, movies$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies$scoreNew <-factor(NA,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies$scoreNew[movies$score >= 0 & movies$score < 2]<-"0-2"
movies$scoreNew[movies$score >= 2 & movies$score < 4]<-"2-4"
movies$scoreNew[movies$score >= 4 & movies$score < 6]<-"4-6"
movies$scoreNew[movies$score >= 6 & movies$score < 8]<-"6-8"
movies$scoreNew[movies$score >= 8 & movies$score < 10]<-"8-10"
table(movies$scoreNew, movies$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies$scoreNew <-factor(NA,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies$scoreNew[movies$score >= 0 & movies$score < 2]<-"0-2"
movies$scoreNew[movies$score >= 2 & movies$score < 4]<-"2-4"
movies$scoreNew[movies$score >= 4 & movies$score < 6]<-"4-6"
movies$scoreNew[movies$score >= 6 & movies$score < 8]<-"6-8"
movies$scoreNew[movies$score >= 8 & movies$score < 10]<-"8-10"
table(movies$scoreNew, movies$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies$scoreNew <-factor(MOVIES$score,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1$scoreNew <-factor(movies1$score,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies$score >= 0 & movies$score < 2]<-"0-2"
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1$scoreNew <-factor(movies1$score,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
movies1$scoreNew[movies1$score >= 8 & movies1$score < 10]<-"8-10"
table(movies$scoreNew, movies$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1$scoreNew <-factor(movies1$score,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
movies1$scoreNew[movies1$score >= 8 & movies1$score <= 10]<-"8-10"
table(movies$scoreNew, movies$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1$scoreNew <-factor(movies1$score,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
movies1$scoreNew[movies1$score >= 8 & movies1$score < 10]<-"8-10"
table(movies$scoreNew, movies$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1$scoreNew <-factor(movies1$score,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
movies1$scoreNew[movies1$score >= 8 & movies1$score < 10]<-"8-10"
hist(movies1$scoreNew)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1$scoreNew <-factor(movies1$score,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
movies1$scoreNew[movies1$score >= 8 & movies1$score < 10]<-"8-10"
barplot(movies1$scoreNew)
knitr::opts_chunk$set(echo = TRUE)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1 %>%
group_by(rating) %>% # Grouping by genre
#summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1 %>%
#group_by(rating) %>% # Grouping by genre
#summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
#arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1$scoreNew <-factor(movies1$score,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1
#install.packages("dplyr") # Installing dplyr package
library("dplyr")
library("ggplot2")
movies <- read.csv("MOVIES.csv") # Importing dataset - Using movies dataset
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system and released before 21st century
group_by(rating) %>% # Grouping by rating
summarise(gross_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(gross_avg) # Arranging in ascending order of the revenue
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1$scoreNew <-factor(movies1$score,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
movies1$scoreNew[movies1$score >= 8 & movies1$score < 10]<-"8-10"
table(movies$scoreNew, movies$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1$scoreNew <-factor(movies1$score,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
movies1$scoreNew[movies1$score >= 8 & movies1$score < 10]<-"8-10"
table(movies$scoreNew, movies$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1$scoreNew <-factor(movies1$score,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
#movies1$scoreNew[movies1$score >= 8 & movies1$score < 10]<-"8-10"
table(movies$scoreNew, movies$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1$scoreNew <-factor(NA,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
movies1$scoreNew[movies1$score >= 8 & movies1$score < 10]<-"8-10"
table(movies$scoreNew, movies$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
movies1$scoreNew <-factor(NA,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
movies1$scoreNew[movies1$score >= 8 & movies1$score < 10]<-"8-10"
table(movies1$scoreNew, movies1$score)
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
# Re-coding the continuous score variable into a factor variable (left index is inclusive, right index is exclusive)
movies1$scoreNew <-factor(NA,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
movies1$scoreNew[movies1$score >= 8 & movies1$score < 10]<-"8-10"
table(movies1$scoreNew, movies1$score) # Checking re-coding
graph <- ggplot(movies1, aes(x = budget, y = gross, color = scoreNew)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
# Re-coding the continuous score variable into a factor variable (left index is inclusive, right index is exclusive)
movies1$scoreNew <-factor(NA,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
movies1$scoreNew[movies1$score >= 8 & movies1$score < 10]<-"8-10"
table(movies1$scoreNew, movies1$score) # Checking re-coding
graph <- ggplot(movies1, aes(x = budget, y = gross, color = scoreNew)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=1, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(color = "IMDB Score", x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
# Re-coding the continuous score variable into a factor variable (left index is inclusive, right index is exclusive)
movies1$scoreNew <-factor(NA,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
movies1$scoreNew[movies1$score >= 8 & movies1$score < 10]<-"8-10"
table(movies1$scoreNew, movies1$score) # Checking re-coding
graph <- ggplot(movies1, aes(x = budget, y = gross, color = scoreNew)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=0.5, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(color = "IMDB Score", x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
movies1 %>%
group_by(rating) %>% # Grouping by genre
summarise(gross_avg = mean(gross), budget_avg = mean(budget), score_avg = mean(score)) %>% # Average gross revenue, budget, and score for each
arrange(gross_avg) # Arranging in ascending order of the gross revenue
# Re-coding the continuous score variable into a factor variable (left index is inclusive, right index is exclusive)
movies1$scoreNew <-factor(NA,levels=c("0-2","2-4", "4-6", "6-8", "8-10"))
movies1$scoreNew[movies1$score >= 0 & movies1$score < 2]<-"0-2"
movies1$scoreNew[movies1$score >= 2 & movies1$score < 4]<-"2-4"
movies1$scoreNew[movies1$score >= 4 & movies1$score < 6]<-"4-6"
movies1$scoreNew[movies1$score >= 6 & movies1$score < 8]<-"6-8"
movies1$scoreNew[movies1$score >= 8 & movies1$score < 10]<-"8-10"
table(movies1$scoreNew, movies1$score) # Checking re-coding
graph <- ggplot(movies1, aes(x = budget, y = gross, color = scoreNew)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=0.5, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(color = "IMDB Score", x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
movies1 <- filter(movies, rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") # Filtering again and storing into a dataset
graph <- ggplot(movies1, aes(x = budget, y = gross)) + geom_point() + facet_wrap(~rating) + geom_smooth(method="lm", size=0.5, color="blue") # Graphing revenue vs. budget for different ratings
graph + labs(x = "Budget (Dollars)", y = "Gross Revenue (Dollars)", title = "Gross Revenue vs. Budget for Different MPAA Ratings") # Adding labels
movies %>%
filter(rating == "R" | rating == "PG" | rating == "G" | rating == "NC-17" | rating == "PG-13") %>%
# Filtering out movies that weren't rated under the MPAA system
group_by(rating) %>% # Grouping by rating
summarise(revenue_avg = mean(gross), budget_avg = mean(budget)) %>% # Average gross revenue and budget for each
arrange(revenue_avg) # Arranging in ascending order of the revenue
cholestrol <- read.csv("cholestrol.csv")
cholestrol <- read.csv("cholestrol.csv")
# set working directory
setwd("~/Documents/GitHub/QTM200Spring2020/problem_sets/PS6/template")
cholestrol <- read.csv("cholestrol.csv")
cholestrol <- read.csv("cholesterol.csv")
